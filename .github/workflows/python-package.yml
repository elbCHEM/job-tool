# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
# Modifications:
# - Use pyproject.toml instead of requirements.txt
# - Included os in matrix
# - Added configuration file to flake8 test

name: Python package

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, reopened]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f pyproject.toml]; then pip install -r pyproject.toml; fi

    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. Uses .flake8 as configuration file
        flake8 . --count --exit-zero --config=.flake8 --statistics
    - name: Test with pytest
      run: |
        pytest
